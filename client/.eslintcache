[{"/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/index.jsx":"1","/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/App.jsx":"2","/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/components/Header.jsx":"3","/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/components/Login.jsx":"4","/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/components/User/UserDetails.jsx":"5","/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/components/User/UserAddEdit.jsx":"6","/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/components/Signup.jsx":"7","/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/components/User/UserFriendsList.jsx":"8","/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/authorizationScripts.js":"9","/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/Models/ClientModel.js":"10"},{"size":538,"mtime":1607736989548,"results":"11","hashOfConfig":"12"},{"size":3330,"mtime":1607796205361,"results":"13","hashOfConfig":"12"},{"size":1538,"mtime":1607735058863,"results":"14","hashOfConfig":"12"},{"size":2254,"mtime":1607736847470,"results":"15","hashOfConfig":"12"},{"size":3591,"mtime":1607736548334,"results":"16","hashOfConfig":"12"},{"size":10523,"mtime":1607727848949,"results":"17","hashOfConfig":"12"},{"size":803,"mtime":1607736886151,"results":"18","hashOfConfig":"12"},{"size":652,"mtime":1607657483569,"results":"19","hashOfConfig":"12"},{"size":2360,"mtime":1607729734551,"results":"20","hashOfConfig":"12"},{"size":2074,"mtime":1607720727413,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"15o50bl",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/index.jsx",["47","48","49","50","51","52"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Switch, BrowserRouter, Route } from 'react-router-dom';\nimport UserAddEdit from './components/User/UserAddEdit';\nimport UserDetails from './components/User/UserDetails';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\n\nReactDOM.render(\n  <React.StrictMode>\n\n          <BrowserRouter>\n            <App />\n        </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);",["53","54"],"/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/App.jsx",["55","56"],"/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/components/Header.jsx",["57","58"],"\nimport axios from 'axios';\nimport React from 'react';\nimport dotenv from 'dotenv';\nimport logo from '../assets/images/logo.png';\nimport { Redirect } from 'react-router-dom';\nimport UserFriendsList from './User/UserFriendsList';\ndotenv.config();\nconst serverUrl = process.env.REACT_APP_SERVER_URL;\nclass Header extends React.Component {\n\n\n\tconstructor(props) {\n    \tsuper(props);\n    \tconsole.log(props);\n\n\t\tthis.state = {\n\t\t\tsearch: \"\",\n\t\t\tbuttonLabel: \"Log out\"\n\t\t}\n\t}\n\n\n\n  render() {\n\n    let tagToRender;\n\n    if (this.props.loginStatus) {\n\t\ttagToRender = (<div>\n\t\t\t<img\n\t\t\t\tclassName=\"header__avatar\"\n\t\t\t\tsrc={`${serverUrl}/pictures/${this.props.user.picture_med}/`}\n\t\t\t\talt=\"\" />\n        \t<span>{this.props.user.displayname}</span>\n        <form>\n          <input\n\t\t\tname=\"search\"\n\t\t\tclassName=\"header__btn\"\n            onChange={this.props.searchHandler}\n            placeholder=\"Search...\"\n\t\t\tvalue={ this.state.value } />\n        </form>\n        <button\n\t\t\tclassName=\"header__btn\"\n            onClick={this.props.logoutHandler}>\n          {this.state.buttonLabel}\n        </button>\n      </div>);\n    }\n    else {\n      tagToRender = (\n        <Redirect to=\"/\" />\n      );\n    }\n\n    return (\n      <header className=\"header__wrapper\">\n\n        {/* <div className=\"header__inner-wrapper\"> */}\n        <div className=\"header__logo-wrapper\">\n          <img className=\"header__logo\" src={logo} alt=\"logo\" />\n        </div>\n        { tagToRender }\n        \n        {/* </div> */}\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/components/Login.jsx",[],"/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/components/User/UserDetails.jsx",["59","60","61"],"\nimport axios from 'axios';\nimport React from 'react';\nimport { Redirect, BrowserRouter , Route } from 'react-router-dom';\nclass UserDetails extends React.Component {\n\n    constructor(props) {\n        super(props);\n        console.log(\"this.props: \", this.props);\n        this.state = {\n            friends: [],\n            user: this.props.user\n        };\n    }\n\n    componentDidMount() {\n        // Axios.get(`${process.env.SERVER_URL}/users/friends/${sessionStorage.getItem(\"userId\")}/${sessionStorage.getItem(\"token\")}`)\n        //     .then(response => {\n        //         //console.log(response);\n        //         const cloneprops = this.props;\n        //         cloneprops.friends = response.data.friends;\n        //         this.setState(cloneprops);\n        //     })\n        //     .catch (error => console.error(error));\n    }\n\n    editHandler = () => {\n        return (\n                <Redirect to={{\n                    pathname: \"/userAddEdit\",\n                    props: {\n                        user: this.props.user\n                    }\n                }}/>\n        );\n    }\n\n\n    render() {\n\n        const tag = this.props.user &&\n            <div className=\"user-details__wrapper\">\n                <div className=\"user-details__header\">\n                    <div className=\"user-details__profile\">\n                        <h1 className=\"user-details__title\" >Welcome {this.props.user.firstName}</h1>\n                    \n                        <div className=\"user-details__img-wrapper\">\n                            <img className=\"user-details__img\" src={this.props.user && this.props.user.picture_large} alt=\"profile\" />\n                        </div>\n                    </div>\n                    <ul className=\"user-details__list\">\n                        <li className=\"user-details__list--item\" >\n                            <div className=\"user-details__label\">First name</div>\n                            <p className=\"user-details__field\">{this.props.user.firstName}</p>\n                        </li>\n\n                        <li className=\"user-details__list--item\" >\n                            <div className=\"user-details__label\">Last name</div>\n                            <p className=\"user-details__field\">{this.props.user.lastName}</p>\n                        </li>\n\n                        <li className=\"user-details__list--item\" >\n                            <div className=\"user-details__label\">Date of Birth</div>\n                            <p className=\"user-details__field\">{new Date(this.props.user.dob).toLocaleDateString()}</p>\n                        </li>\n\n                        <li className=\"user-details__list--item\" >\n                            <div className=\"user-details__label\">About</div>\n                            <p className=\"user-details__field\"> {this.props.user.about}</p>\n                        </li>\n                    </ul>\n                    <button className=\"user-details__edit-btn\" onClick={this.editHandler}>Edit Profile</button>\n                </div>\n\n                <div className=\"user-list\">\n                    <ul>\n                        {this.props.friends && this.props.friends.map(item => {\n                            return <li key={item.id}>\n                                <div>{item.displayName}</div>\n                                <div>{item.about}</div>\n                            </li>;\n                        })\n                        }\n                    </ul>\n                </div>\n\n            </div>;\n    \n        return tag || <></>;\n    }\n}\n\nexport default UserDetails;","/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/components/User/UserAddEdit.jsx",[],"/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/components/Signup.jsx",[],"/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/components/User/UserFriendsList.jsx",[],"/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/authorizationScripts.js",["62"],"import axios from 'axios';\nimport ClientModel from \"./Models/ClientModel\";\nconst serverUrl = process.env.REACT_APP_SERVER_URL;\n\n/**\n * \n * @param {String} userName_ \n * @param {String} password_\n * @returns {Object} user if authorized\n */\nasync function authorizeUser(userName_, password_) {\n\n    const requestUrl = `${serverUrl}/users/authorize/${userName_}/${password_}`;\n    //console.log(\"loginHandler()\", requestUrl);\n    \n    const result = await axios.get(requestUrl);\n    console.log(\"loginHandler() ===>\", result.data.user);\n    console.error(result);\n    sessionStorage.setItem(\"token\", result.data.token);\n    sessionStorage.setItem(\"userId\", result.data.user.userId);\n    sessionStorage.setItem('isloggedIn', true);\n\n    return result.data.user;\n}\n\n\n/**\n * \n * @param {String} userId_\n * @returns {Object} data\n */\nasync function logout(userId_) {\n\n    const response = await axios.get(`${serverUrl}/users/logout/${userId_}`);\n        if (response.status === 200) {\n            localStorage.removeItem(\"token\");\n            localStorage.removeItem(\"userId\");\n            sessionStorage.setItem('isloggedIn', false);\n            const cloneState = this.state;\n            cloneState.isUserLoggedIn = false;\n            this.setState(cloneState);\n        }            \n\n    return response.data;\n}\n\n\n/**\n * \n * @param {String} token_ \n */\nasync function getUserData(userId, token_) {\n    try {\n        console.log(\"Getting user...\");\n        const response = await axios.get(`${serverUrl}/users/${userId}/${token_}`);\n        console.log(response.data);\n\n        return response.data[0];\n    }\n    catch (error) {\n        console.error(error);\n        return error;\n    }\n}\n\n/**\n * \n * @param {ClientModel} user_\n * @returns {Object} data\n */\nasync function postUser(user_) {\n    const method = sessionStorage.getItem(\"token\") ? \"PUT\" : \"POST\"; // if no id is passed, POST will be used to create new record\n    \n    const result = await axios({\n            method: method,\n            url: `${serverUrl}/users/${sessionStorage.getItem(\"token\")}`,\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: user_.toJSON()\n        })\n        .catch ((error) => {\n            console.error(error);\n        });\n    return result && result.data;\n}\n\n\n\nexport { getUserData, postUser, authorizeUser, logout };","/Users/augusto/Dropbox/BrainStation/repo/capstone/client/src/Models/ClientModel.js",[],{"ruleId":"63","severity":1,"message":"64","line":5,"column":9,"nodeType":"65","messageId":"66","endLine":5,"endColumn":15},{"ruleId":"63","severity":1,"message":"67","line":5,"column":32,"nodeType":"65","messageId":"66","endLine":5,"endColumn":37},{"ruleId":"63","severity":1,"message":"68","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":19},{"ruleId":"63","severity":1,"message":"69","line":7,"column":8,"nodeType":"65","messageId":"66","endLine":7,"endColumn":19},{"ruleId":"63","severity":1,"message":"70","line":8,"column":8,"nodeType":"65","messageId":"66","endLine":8,"endColumn":13},{"ruleId":"63","severity":1,"message":"71","line":9,"column":8,"nodeType":"65","messageId":"66","endLine":9,"endColumn":14},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"63","severity":1,"message":"76","line":8,"column":10,"nodeType":"65","messageId":"66","endLine":8,"endColumn":23},{"ruleId":"63","severity":1,"message":"77","line":10,"column":8,"nodeType":"65","messageId":"66","endLine":10,"endColumn":23},{"ruleId":"63","severity":1,"message":"78","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":13},{"ruleId":"63","severity":1,"message":"77","line":7,"column":8,"nodeType":"65","messageId":"66","endLine":7,"endColumn":23},{"ruleId":"63","severity":1,"message":"78","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":13},{"ruleId":"63","severity":1,"message":"76","line":4,"column":20,"nodeType":"65","messageId":"66","endLine":4,"endColumn":33},{"ruleId":"63","severity":1,"message":"67","line":4,"column":36,"nodeType":"65","messageId":"66","endLine":4,"endColumn":41},{"ruleId":"63","severity":1,"message":"79","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":19},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'UserAddEdit' is defined but never used.","'UserDetails' is defined but never used.","'Login' is defined but never used.","'Signup' is defined but never used.","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"'BrowserRouter' is defined but never used.","'UserFriendsList' is defined but never used.","'axios' is defined but never used.","'ClientModel' is defined but never used.","no-global-assign","no-unsafe-negation"]