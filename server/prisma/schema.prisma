generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Activity {
  activityId  Int         @id @default(autoincrement())
  title       String
  description String
  location    String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())
  eventId     Int
  event       Event       @relation(fields: [eventId], references:[eventId])
  comments    Comment[]
}

model Comment {
  commentId     Int        @id @default(autoincrement())
  authorId      Int
  author        User       @relation(fields: [authorId], references: [userId])
  title         String
  text          String      
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now())
  reactions     Reaction[]
}

model Event {
  eventId       Int        @id @default(autoincrement())
  ownerId       Int
  owner         User         @relation(name: "event_owner", fields: [ownerId], references: [userId])
  name          String
  address       String
  description   String
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now())
  activities    Activity[]
  participants  User[]
  comments      Comment[]
}

model Reaction {
  reactionId  Int          @id @default(autoincrement())
  ownerId     Int
  owner       User         @relation(fields: [ownerId], references: [userId])
  commentId   Comment      @relation(references: [commentId])
  likeDislike Boolean
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
}

model User {
  userId           Int        @id @default(autoincrement())
  username         String     @unique
  password         String
  firstName        String
  lastName         String
  dob              DateTime
  phone            String?
  email            String     @unique
  street           String
  city             String
  province_state   String
  country          String
  userFolderPath   String
  displayName      String?
  displayBirthday  DateTime?
  about            String?
  gender           String?
  avatar           String?
  picture_med      String?
  picture_large    String?
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @default(now())
  friends          Friends[]
  events           Event[]
  comments         Comment[]
  reactions        Reaction[]
}

model Friends {
  friendshipId Int @id @default(autoincrement())
  userId    Int
  owner    User @relation(name: "friend_owner", fields: [userId], references: [userId])
  friendId Int
  friend  User @relation(fields: [friendId], references: [userId])
}

